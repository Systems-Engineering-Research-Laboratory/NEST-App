@model dynamic
@using Jmelosegui.Mvc.Googlemap
@{
    ViewBag.Title = "MapView";
}

<h2>Map Demo: OpenLayers 3.0 with OpenStreetMaps and MapQuest</h2>
<script src="http://openlayers.org/en/v3.0.0/build/ol.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-2.1.0.js"></script>
@*<a href="~/Content/Map%20Resources/gpxdata.gpx">~/Content/Map Resources/gpxdata.gpx</a>*@
<script type="text/javascript">
    $ (document).ready(function(){
        //Load OpenStreetMaps tiles
        var rasterOSM = new ol.layer.Tile({
            source: new ol.source.OSM({layer: 'sat'})
        });
        
        //Load MapQuest tiles
        var rasterMQ = new ol.layer.Tile({
            source: new ol.source.MapQuest({layer: 'sat'})
        });
        
        var gpxLocation = "../NEST-App/Content/Map%20Resources/gpxdata.gpx";


        //Load and parse GPX data as a vector layer
        var gpxLayer = new ol.layer.Vector({
            source: new ol.source.GPX({
                projection: 'EPSG:3857',
                url: gpxLocation
            }),
            style: function(feature, resolution) {
                return style[feature.getGeometry().getType()];
            }
        });

        //Specify the draw style for GPX data points
        var style = {
            'Point': [new ol.style.Style({
                image: new ol.style.Circle({
                    fill: new ol.style.Fill({
                        color: 'rgba(255,255,0,0.4)'
                    }),
                    radius: 5,
                    stroke: new ol.style.Stroke({
                        color: '#ff0',
                        width: 1
                    })
                })
            })],
            'LineString': [new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: '#f00',
                    width: 3
                })
            })],
            'MultiLineString': [new ol.style.Style({
                stroke: new ol.style.Stroke({
                    color: '#0f0',
                    width: 3
                })
            })]
        };

        //Create the OSM Map
        var map = new ol.Map({
            layers: [rasterOSM],
            target: 'map',
            //leave the map projection as is; do not convert/overlay
            /*projection: new ol.proj.Projection("EPSG:900913"),*/

            view: new ol.View({

                //center: ol.proj.transform([-34.24, -118.53], 'EPSG:3857', 'EPSG:900913'),
                //center: ol.proj.transform([-118.529,34.2417], 'EPSG:4326', 'EPSG:900913'),
                //center: ol.proj.transform([-121.7295456,45.4431641], 'EPSG:4326', 'EPSG:3857'),
                center: ol.proj.transform([-118.529,34.2417], 'EPSG:4326', 'EPSG:3857'),
                zoom: 17
            })
        });

        //Create the MapQuest Map with the GPX layer added on
        var mapMQ = new ol.Map({
            layers: [rasterMQ/*,gpxLayer*/],
            target: 'map2',
            //leave the map projection as is; do not convert/overlay
            /*projection: new ol.proj.Projection("EPSG:900913"),*/

            view: new ol.View({

                //center: ol.proj.transform([-34.24, -118.53], 'EPSG:3857', 'EPSG:900913'),
                //center: [-118.529,34.2417],
                center: ol.proj.transform([-118.529,34.2417], 'EPSG:4326', 'EPSG:900913'), //csun
                //center: ol.proj.transform([-121.7295456,45.419], 'EPSG:4326', 'EPSG:3857'), //GPX
                zoom: 17
            })
        });


        //Preset CSUN coords
        /*
        var csun = ol.proj.transform([-118.529,34.2417], 'EPSG:4326', 'EPSG:3857');
        mapMQ.getView().setCenter(csun, 17);
        */


        // The features are not added to a regular vector layer/source,
        // but to a feature overlay which holds a collection of features.
        // This collection is passed to the modify and also the draw
        // interaction, so that both can add or modify features.
        //-OpenLayers Documentation
        var featureOverlay = new ol.FeatureOverlay({
            style: new ol.style.Style({
                fill: new ol.style.Fill({
                    color: 'rgba(255, 255, 255, 0.2)'
                }),
                stroke: new ol.style.Stroke({
                    color: '#ffcc33',
                    width: 2
                }),
                image: new ol.style.Circle({
                    radius: 7,
                    fill: new ol.style.Fill({
                        color: '#ffcc33'
                    })
                })
            })
        });
        featureOverlay.setMap(map);

        var modify = new ol.interaction.Modify({
            features: featureOverlay.getFeatures(),
            // the SHIFT key must be pressed to delete vertices, so
            // that new vertices can be drawn at the same position
            // of existing vertices
            //-OpenLayers Documentation
            deleteCondition: function(event) {
                return ol.events.condition.shiftKeyOnly(event) &&
                ol.events.condition.singleClick(event);
            }
        });
        map.addInteraction(modify);

        var draw; // global so we can remove it later
        function addInteraction() {
            draw = new ol.interaction.Draw({
                features: featureOverlay.getFeatures(),
                type: (typeSelect.value)
            });
            map.addInteraction(draw);
        }

        var typeSelect = document.getElementById('type');


        typeSelect.onchange = function(e) {
            map.removeInteraction(draw);
            addInteraction();
        };
        addInteraction();
    });//end doc.ready
    </script>
@*<a href="~/Content/Map%20Resources/gpxdata.gpx">~/Content/Map Resources/gpxdata.gpx</a>*@
<div class="row">
    <div class="col-md-12">
            <link rel="stylesheet" href="http://openlayers.org/en/v3.0.0/css/ol.css" type="text/css">
            <style>
                .map {
                    height: 475px;
                    width: 45%;
                    border: none;
                    margin: 10px;
                    display: inline-block;
                    position: relative;
                    float: left;
                }
            </style>
            @*<script src="v3.0.0/build/ol.js" type="text/javascript"></script>*@

            <div id='displays'>
                <!--This is the OSM map-->
                <div id="map" class="map"></div>
                <!--This is the MapQuest map-->
                <div id="map2" class="map"></div>
            </div>
            <div style="clear:left;">
                <h4 id="title">Draw and modify</h4>
                <form>
                    <label>Geometry type &nbsp;</label>
                    <select id="type">
                        <option value="Point">Point</option>
                        <option value="LineString">LineString</option>
                        <option value="Polygon">Polygon</option>
                    </select>
                </form>
            </div>
            @*<script src="demo.js" type="text/javascript"></script>*@

    </div>
</div>